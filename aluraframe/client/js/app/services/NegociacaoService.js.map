{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","arrayAchatado","array","concat","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoesGeral","filter","some","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService'\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../DAO/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            })\r\n\r\n    }\r\n\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            })\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            })\r\n\r\n    }\r\n\r\n    obterNegociacoesGeral() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()]\r\n        ).then(periodos => {\r\n            let negociacoes = periodos\r\n                .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n\r\n\r\n            return negociacoes\r\n        })\r\n            .catch(erro => { throw new Error(erro) });\r\n\r\n    }\r\n\r\n    cadastrar(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociaçao adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não é possível adicionar negociação')\r\n            });\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações')\r\n            });\r\n\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociacões apagadas com sucesso')\r\n            .catch(() => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações')\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n\r\n        return this\r\n            .obterNegociacoesGeral()\r\n            .then(negociacoes => negociacoes.filter(negociacao =>\r\n                !listaAtual.some(negociacaoExistente =>\r\n                    negociacao.equals(negociacaoExistente))))\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível importar negociações para importar');\r\n            })\r\n\r\n    }\r\n}"]}